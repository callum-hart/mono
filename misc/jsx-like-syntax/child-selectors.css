/**
Child Selectors --

- Selectors targeting children should use child combinator (>).
- Without child combinator overrides can go undetected when structures are nested in the HTML.

Benefits:
- deterministic, confident styles will always look the same
- removes overrides in nested structures (more robust)
- enforces consistency in markup (otherwise styles won't apply)
- makes overrides easier to determine

Drawbacks:
- makes markup more verbose (have to include full path to target element)
- makes styles less portable / flexible

Alternatives:
- calculate invalid nested structures up-front, and generate validation classes

------------------------------------------------------------------------

<div>
  <a>
    background: deepskyblue;
  </a>
</div>

<span>
  <a>
    background: palevioletred;
  </a>
</span>

*/


/* The problem */

.the-problem div a {
  background: deepskyblue;
}

.the-problem span a {
  background: palevioletred;
}


/* Child combinator solution */

.a-solution div > a {
  background: deepskyblue;
}

.a-solution span > a {
  background: palevioletred;
}


/* Generated validation classes */

.another-solution div a {
  background: deepskyblue;
}

.another-solution span a {
  background: palevioletred;
}

.another-solution div span a {
  error: '`background` already set by grandparent `div`';
  background: mistyrose;
  border: 1px solid indianred;
}

.another-solution span div a {
  error: '`background` already set by grandparent `span`';
  background: mistyrose;
  border: 1px solid indianred;
}
