$dd: green;

body {
    background: $dd;
}

@function grid-width($n) {
  @return $n * 10;
}

body  {
    width: grid-width(5);
}

$color: white;

@mixin wat() {
  @content;
}

.wat {
    @include wat {
        color: red;
        background: green;
    }
}

// As maps --

@mixin foo($someMap) {
    @each $key, $val in $someMap {
        #{$key}: append($val, #{'/* immutable */'});
    }
}

.foo {
    @include foo((
        color: red,
        font-size: 20px * 2
    ));
}

// Types --

@function Immutable($value) {
    @return append($value, #{'/* Immutable */'});
}

@function Protected($value) {
    @return append($value, #{'/* Protected */'});
}

// @function Public...

// Within type: property has different values within different breakpoints.
// Condition: has to be used inside a @media query.
@function Within($value) {
    @return append($value, #{'/* Within */'});
}

// Modifiers --

@mixin --override($someMap) {
    // CSS selector from which mixin is called!!
    @debug 'CSS selector: #{&}';

    @each $key, $val in $someMap {
        @debug 'Overring #{$key}';
        #{$key}: append($val, #{'/* overriden */'});
    }
}

// maybe modifiers should be functions?
@function --override($value) {
    @return append($value, #{'/* --overriden */'})
}

// --mutate()

// Usage --

.pow {
    color: Protected($color);
    font-size: Immutable(20 * 2);
}

.pow:hover {
    @include --override((
        color: red
    ));
}

// Usage --

.pow:hover {
    color: --override(blue);
}

.bar {
    &.bar--witherror{
        .foo {
            color: --mutate(red);
        }
    }
}

// Within usage --

.pow {
    @media(max-width: 500px) {
        font-size: Within(12px);
        color: Within(Immutable(red)); // color is immutable within breakpoint
    }

    @media(min-width: 500px) {
        font-size: Within(16px);
        color: Within(Protected(blue)); // color is protected within breakpoint
    }

    &:hover {
        // @media(max-width: 500px) {
        //     color: --override(orange); // not allowed since color is immutable within breakpoint
        // }

        @media(min-width: 500px) {
            color: --override(green); // can override color as it's protected within breakpoint
        }
    }
}

@function --overrule($value) {
    @return append($value, #{!important '/* Overrule */'})
}

.bam {
    font-size: --overrule(10px);
}

